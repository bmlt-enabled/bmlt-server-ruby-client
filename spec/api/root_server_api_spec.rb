=begin
#BMLT

#BMLT Admin API Documentation

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.14.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for BmltClient::RootServerApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RootServerApi' do
  before do
    # run before each test
    @api_instance = BmltClient::RootServerApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RootServerApi' do
    it 'should create an instance of RootServerApi' do
      expect(@api_instance).to be_instance_of(BmltClient::RootServerApi)
    end
  end

  # unit tests for auth_logout
  # Revokes a token
  # Revoke token and logout.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auth_logout test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for auth_refresh
  # Revokes and issues a new token
  # Refresh token.
  # @param [Hash] opts the optional parameters
  # @return [Token]
  describe 'auth_refresh test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for auth_token
  # Creates a token
  # Exchange credentials for a new token
  # @param token_credentials User credentials
  # @param [Hash] opts the optional parameters
  # @return [Token]
  describe 'auth_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_error_test
  # Tests some errors
  # Tests some errors.
  # @param error_test Pass in error test object.
  # @param [Hash] opts the optional parameters
  # @return [ErrorTest]
  describe 'create_error_test test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_format
  # Creates a format
  # Creates a format.
  # @param format_create Pass in format object
  # @param [Hash] opts the optional parameters
  # @return [Format]
  describe 'create_format test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_meeting
  # Creates a meeting
  # Creates a meeting.
  # @param meeting_create Pass in meeting object
  # @param [Hash] opts the optional parameters
  # @return [Meeting]
  describe 'create_meeting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_service_body
  # Creates a service body
  # Creates a service body.
  # @param service_body_create Pass in service body object
  # @param [Hash] opts the optional parameters
  # @return [ServiceBody]
  describe 'create_service_body test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_user
  # Creates a user
  # Creates a user.
  # @param user_create Pass in user object
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'create_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_format
  # Deletes a format
  # Deletes a format by id.
  # @param format_id ID of format
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_format test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_meeting
  # Deletes a meeting
  # Deletes a meeting by id.
  # @param meeting_id ID of meeting
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_meeting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_service_body
  # Deletes a service body
  # Deletes a service body by id.
  # @param service_body_id ID of service body
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_service_body test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_user
  # Deletes a user
  # Deletes a user by id
  # @param user_id ID of user
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_format
  # Retrieves a format
  # Retrieve a format
  # @param format_id ID of format
  # @param [Hash] opts the optional parameters
  # @return [Format]
  describe 'get_format test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_formats
  # Retrieves formats
  # Retrieve formats
  # @param [Hash] opts the optional parameters
  # @return [Array<Format>]
  describe 'get_formats test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_laravel_log
  # Retrieves laravel log
  # Retrieve the laravel log if it exists.
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_laravel_log test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_meeting
  # Retrieves a meeting
  # Retrieve a meeting.
  # @param meeting_id ID of meeting
  # @param [Hash] opts the optional parameters
  # @return [Meeting]
  describe 'get_meeting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_meeting_changes
  # Retrieve changes for a meeting
  # Retrieve all changes made to a specific meeting.
  # @param meeting_id ID of the meeting
  # @param [Hash] opts the optional parameters
  # @return [Array<MeetingChangeResource>]
  describe 'get_meeting_changes test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_meetings
  # Retrieves meetings
  # Retrieve meetings for authenticated user.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :meeting_ids comma delimited meeting ids
  # @option opts [String] :days comma delimited day ids between 0-6
  # @option opts [String] :service_body_ids comma delimited service body ids
  # @option opts [String] :search_string string
  # @return [Array<Meeting>]
  describe 'get_meetings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_root_server
  # Retrieves a root server
  # Retrieve a single root server id.
  # @param root_server_id ID of root server
  # @param [Hash] opts the optional parameters
  # @return [RootServer]
  describe 'get_root_server test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_root_servers
  # Retrieves root servers
  # Retrieve root servers.
  # @param [Hash] opts the optional parameters
  # @return [Array<RootServer>]
  describe 'get_root_servers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_service_bodies
  # Retrieves service bodies
  # Retrieve service bodies for authenticated user.
  # @param [Hash] opts the optional parameters
  # @return [Array<ServiceBody>]
  describe 'get_service_bodies test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_service_body
  # Retrieves a service body
  # Retrieve a single service body by id.
  # @param service_body_id ID of service body
  # @param [Hash] opts the optional parameters
  # @return [ServiceBody]
  describe 'get_service_body test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user
  # Retrieves a single user
  # Retrieve single user.
  # @param user_id ID of user
  # @param [Hash] opts the optional parameters
  # @return [User]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_users
  # Retrieves users
  # Retrieve users for authenticated user.
  # @param [Hash] opts the optional parameters
  # @return [Array<User>]
  describe 'get_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for partial_update_user
  # Patches a user
  # Patches a user by id.
  # @param user_id ID of user
  # @param user_partial_update Pass in fields you want to update.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'partial_update_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_format
  # Patches a format
  # Patches a single format by id.
  # @param format_id ID of format
  # @param format_partial_update Pass in fields you want to update.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_format test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_meeting
  # Patches a meeting
  # Patches a meeting by id
  # @param meeting_id ID of meeting
  # @param meeting_partial_update Pass in fields you want to update.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_meeting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for patch_service_body
  # Patches a service body
  # Patches a single service body by id.
  # @param service_body_id ID of service body
  # @param service_body_partial_update Pass in fields you want to update.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_service_body test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_format
  # Updates a format
  # Updates a format.
  # @param format_id ID of format
  # @param format_update Pass in format object
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_format test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_meeting
  # Updates a meeting
  # Updates a meeting.
  # @param meeting_id ID of meeting
  # @param meeting_update Pass in meeting object
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_meeting test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_service_body
  # Updates a Service Body
  # Updates a single service body.
  # @param service_body_id ID of service body
  # @param service_body_update Pass in service body object
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_service_body test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user
  # Update single user
  # Updates a user.
  # @param user_id ID of user
  # @param user_update Pass in user object
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
